name: Build (macOS / Windows / Linux)

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-14, windows-2022, ubuntu-22.04]

    env:
      CI: true
      APPIMAGE_EXTRACT_AND_RUN: "1"
      CSC_IDENTITY_AUTO: false
      ELECTRON_BUILD_PUBLISH: never
      ELECTRON_CACHE: ${{ github.workspace }}/.cache/electron
      ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      - name: Print versions
        run: |
          node -v
          npm -v

      - name: Cache Electron caches
        uses: actions/cache@v4
        with:
          path: |
            .cache/electron
            .cache/electron-builder
            ~/.cache/electron
            ~/.cache/electron-builder
            ~/AppData/Local/electron/Cache
            ~/AppData/Local/electron-builder/Cache
            ~/Library/Caches/electron
            ~/Library/Caches/electron-builder
          key: electron-${{ runner.os }}-node18-${{ hashFiles('package-lock.json', 'pnpm-lock.yaml', 'yarn.lock') }}

      - name: Install dependencies
        run: |
          npm ci || npm install --no-audit --no-fund || npm install --legacy-peer-deps
      
      - name: Install Linux deps (FUSE/AppImage)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2 || sudo apt-get install -y libfuse2t64 || true
          sudo apt-get install -y rpm || true

      - name: Build renderer (Vite)
        run: |
          npm run build:renderer 2>&1 | tee vite-build.log
        shell: bash

      - name: Package macOS
        if: matrix.os == 'macos-14'
        env:
          DEBUG: electron-builder
        run: |
          npm run dist:mac 2>&1 | tee electron-builder.log
        shell: bash

      - name: Package Windows
        if: matrix.os == 'windows-2022'
        env:
          DEBUG: electron-builder
        run: |
          npm run dist:win 2>&1 | Tee-Object -FilePath electron-builder.log
        shell: pwsh

      - name: Package Linux
        if: matrix.os == 'ubuntu-22.04'
        env:
          DEBUG: electron-builder
        run: |
          npm run dist:linux 2>&1 | tee electron-builder.log
        shell: bash

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.os }}
          path: |
            vite-build.log
            electron-builder.log
          if-no-files-found: warn

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-14'
        uses: actions/upload-artifact@v4
        with:
          name: MusicRoom-mac
          path: |
            dist/*.dmg
            dist/*.zip
          if-no-files-found: warn

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-2022'
        uses: actions/upload-artifact@v4
        with:
          name: MusicRoom-windows
          path: |
            dist/*.exe
            dist/*.zip
          if-no-files-found: warn

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: MusicRoom-linux
          path: |
            dist/*.AppImage
            dist/*.deb
          if-no-files-found: warn
